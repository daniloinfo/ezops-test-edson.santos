jobs:
  deploy:
    name: Deploy chat-application Fargate
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ezops-test-edson.santos
        IMAGE_TAG: ${{ github.sha }}
      run: |
        ls -la
        docker build -t 853644810240.dkr.ecr.sa-east-1.amazonaws.com/ezops-test-edson.santos:$IMAGE_TAG
        docker push 853644810240.dkr.ecr.sa-east-1.amazonaws.com/ezops-test-edson.santos:$IMAGE_TAG

    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ezops-test-edson.santos
        IMAGE_TAG: ${{ github.sha }}
      with:
        task-definition: task-definition.json
        container-name: chat-application
        image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: chat-application
        cluster: chat-application

on:
  push:
    branches: [ master ]